from datetime import datetime
arr_large = [6397, 3612, 4514, 8268, 5367, 2573, 889, 9159, 6710, 4206, 4767, 9341, 1965, 8388, 6051, 9303, 6513, 9687, 8351, 965, 8613, 5934, 6634, 9355, 4632, 8990, 9655, 5112, 3274, 6269, 2876, 8086, 4936, 6641, 8171, 2736, 6820, 540, 1265, 6518, 4467, 1846, 1407, 4332, 983, 7777, 6341, 2383, 1900, 4376, 4138, 6747, 4294, 412, 1160, 6281, 7057, 4105, 2584, 6603, 5659, 1303, 6197, 6995, 7933, 5981, 7032, 4213, 681, 5014, 3907, 4719, 5051, 5180, 4059, 2754, 9093, 840, 2120, 9569, 2896, 8688, 1216, 8873, 6757, 3530, 9586, 9152, 8387, 6779, 3321, 2643, 4592, 5494, 7036, 1902, 9131, 783, 4817, 1338, 5525, 5790, 904, 7341, 1986, 9175, 505, 1282, 7271, 312, 5158, 6815, 609, 9849, 836, 6928, 7730, 6319, 2051, 4093, 4469, 3009, 9135, 9811, 9646, 5284, 8186, 8149, 3877, 5844, 6303, 2416, 7280, 9109, 4245, 7207, 6860, 6547, 7602, 5980, 3560, 1598, 5290, 3085, 2765, 9504, 8166, 9398, 6112, 282, 7089, 9318, 2928, 5642, 361, 8377, 1475, 8237, 9333, 2388, 6275, 803, 8559, 4040, 2441, 3369, 3606, 8121, 5205, 3113, 3826, 3910, 1372, 8181, 4615, 3744, 9461, 1148, 5686, 8549, 5567, 8313, 3022, 3880, 1992, 73, 7231, 7912, 6914, 4643, 742, 6077, 4544, 7316, 311, 6821, 8570, 6463, 5233, 5033, 2197, 4153, 1027, 9240, 1365, 2481, 5222, 2701, 4948, 3429, 3493, 2018, 9915, 5575, 8350, 7987, 4909, 1445, 2082, 6875, 9101, 6894, 4841, 788, 4061, 5397, 6797, 6964, 7255, 8596, 2506, 7580, 364, 3725, 8234, 8927, 3089, 436, 7798, 3722, 6616, 3248, 8354, 8698, 612, 4620, 3096, 3109, 5608, 759, 4141, 5322, 7804, 9156, 1812, 8548, 176, 2817, 9096, 6440, 5386, 920, 6811, 9585, 4929, 4470, 7478, 8058, 4454, 4918, 4404, 7078, 7956, 2933, 3288, 6521, 7760, 2577, 8650, 1071, 6953, 3994, 3207, 2942, 8832, 2567, 8980, 4772, 8742, 4009, 8992, 6127, 7012, 31, 5795, 3635, 9980, 9718, 1786, 5721, 4380, 6707, 1095, 2768, 2228, 5706, 2682, 972, 5054, 5388, 8732, 5486, 9154, 4566, 8682, 726, 2124, 2048, 6326, 93, 2541, 4862, 4606, 9547, 8658, 9294, 6649, 1505, 1655, 4900, 4589, 3641, 6881, 5035, 2755, 650, 3456, 479, 8474, 6107, 6263, 4679, 3931, 8136, 2722, 6696, 9873, 2794, 6672, 9142, 6401, 8655, 5297, 5660, 3133, 6677, 1497, 6669, 8118, 4166, 4011, 1404, 697, 2397, 8303, 810, 834, 1308, 7489, 7665, 6292, 2207, 180, 4720, 9597, 3585, 3851, 1456, 8848, 298, 2819, 4076, 6877, 2458, 2155, 3841, 5833, 297, 4158, 387, 5071, 8439, 6092, 7038, 4185, 3792, 6222, 4801, 8269, 3508]
arr = [2,4,1,6,5,8,7,3]

# Bubble Sort
def bubble_sort(arr):
    stime = datetime.now()
    for i in range(len(arr)):
        swapped = False
        for j in range(1, len(arr)-i):
            if arr[j-1] > arr[j]:
                arr[j-1], arr[j] = arr[j], arr[j-1]
                swapped = True

        if not swapped:
            break
    
    etime = datetime.now()
    print("Bubble Sort: ", etime-stime)

bubble_sort(arr_large)

#Selection Sort
stime = datetime.now()
def selection_sort(arr):
    for i in range(len(arr)):
        mn = i
        for j in range(i+1, len(arr)):
            if arr[j] < arr[mn]:
                mn = j
        if i != mn:
            arr[i], arr[mn] = arr[mn], arr[i]
    
    etime = datetime.now()
    print("Selection Sort: ", etime-stime)

selection_sort(arr_large)

#Insertion Sort
def insertion_sort(arr):
    stime = datetime.now()
    for i in range(1, len(arr)):
        for j in range(i, 0, -1):
            if arr[j] < arr[j-1]:
                arr[j], arr[j-1] = arr[j-1], arr[j] 
            else:
                break
    
    etime = datetime.now()
    print("Insertion Sort: ", etime-stime)

insertion_sort(arr_large)

#Merge Sort
def merge_sort(arr):
    def merge(arr):
    
        if len(arr) <= 1:
            return arr

        mid = len(arr)//2
        left = arr[:mid]
        right = arr[mid:]

        left = merge(left)
        right = merge(right)

        return merge_sorted_array(left,right)

    def merge_sorted_array(left, right):
        sorted_array = []

        l = 0
        r = 0
        while l < len(left) and r < len(right):
            if left[l] <= right[r]:
                sorted_array.append(left[l])
                l += 1
            else:
                sorted_array.append(right[r])
                r += 1

        sorted_array.extend(left[l:])
        sorted_array.extend(right[r:])

        return sorted_array
    stime = datetime.now()
    merge(arr)
    etime = datetime.now()
    print("Merge Sort: ", etime-stime)

merge_sort(arr_large)
